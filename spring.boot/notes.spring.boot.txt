Spring Boot: Opinionated framework, can be deployed without a WAR.

https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/html/
https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/api/

To make an app, go to spring initializr: https://start.spring.io/

Can use SKDman, command line

Spring Boot starters are an easy way to include dependencies.
spring-boot-starter-web, spring-boot-starter-data-jpa
You might be able to see all the options at https://mvnrepository.com/artifact/org.springframework.boot

In pom.xml. right-click, select "Maven", select "Show effect POM"
The pom generated by the Spring Initializr has a "version" tag in the parent section.
The Spring starters use that version.

Database files at https://github.com/dlbunker/ps-first-spring-boot-app

create user conf_user with password 'this-is-conference';
create database conference_app with owner conf_user;
grant all privileges on database conference_app to conf_user;

psql --port=5433 -h localhost -U conf_user -d conference_app

Create the Database:
create database conference_app;

Setup the Tables:
psql -d conference_app -f /home/ericm/create_tables.sql
within psql: \i /home/ericm/create_tables.sql
Install the Data:
psql -d conference_app -f /home/ericm/insert_data.sql
within psql: \i /home/ericm/insert_data.sql
JDBC URL: `jdbc:postgresql://localhost:5432/conference_app`

Username: `postgres`

Password: `Welcome`

JPA: tables have plural name, class has singular name
Also: He made the JPA class variables snake_case, not usual Java camelCase
because that is how we name columns in databases
And this way you don't need to bind them with annotations
although you still need to bind the class to the table with an annotation
You would use @Column

for repository:
extending org.springframework.data.jpa.repository.JpaRepository gives you find, update, save, delete

For controllers:
annotations:
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
use:
@RestController // tells Spring we will deal with JSON
@RequestMapping( "/api/v1/sessions" ) // the URL this controller will handle

The code for the controllers looks nice, but how does it handle errors?
So for the create methods in the controller, how does it handle xml parsing?

@RequestMapping( value = "{id}", method = RequestMethod.DELETE )
For delete and update, you need to specify the method in the @RequestMapping attribute
There is a @GetMapping and @PostMapping, but no @DeleteMapping or @UpdateMapping

import com.fasterxml.jackson.annotation.JsonIgnore;
this will stop the join table/many-to-many from causing an infinite loop
do this on the table that does not have the @JoinTable annotation
Also add @JsonIgnoreProperties( { "handler", "hibernateLazyInitializer" } )
to the models w/many-to-many so get/id will not throw an exception

To create in Postman:
http://localhost:8080/api/v1/sessions, verb POST, put this in body, select "raw", pick type as JSON
 {
    "session_name": "Spring and JSON",
    "session_description": "First Session",
    "session_length": 60
}

Update takes PUT verb

https://www.baeldung.com/spring-boot-testing


/usr/lib/jvm/java-11-openjdk-amd64/bin/java
-javaagent:/home/ericm/idea-IC-201.7223.91/lib/idea_rt.jar=45943:/home/ericm/idea-IC-201.7223.91/bin
-Dfile.encoding=UTF-8
-classpath /home/ericm/github/java_apps/spring.boot/conference-demo/target/classes:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.3.1.RELEASE/spring-boot-starter-web-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.1.RELEASE/spring-boot-starter-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot/2.3.1.RELEASE/spring-boot-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.3.1.RELEASE/spring-boot-autoconfigure-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.3.1.RELEASE/spring-boot-starter-logging-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:
/home/ericm/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:
/home/ericm/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3.jar:
/home/ericm/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar:
/home/ericm/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:
/home/ericm/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:
/home/ericm/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.3.1.RELEASE/spring-boot-starter-json-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.0/jackson-databind-2.11.0.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.0/jackson-annotations-2.11.0.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.0/jackson-core-2.11.0.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.0/jackson-datatype-jdk8-2.11.0.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.0/jackson-datatype-jsr310-2.11.0.jar:
/home/ericm/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.0/jackson-module-parameter-names-2.11.0.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.3.1.RELEASE/spring-boot-starter-tomcat-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.36/tomcat-embed-core-9.0.36.jar:
/home/ericm/.m2/repository/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar:
/home/ericm/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.36/tomcat-embed-websocket-9.0.36.jar:
/home/ericm/.m2/repository/org/springframework/spring-web/5.2.7.RELEASE/spring-web-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-beans/5.2.7.RELEASE/spring-beans-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-webmvc/5.2.7.RELEASE/spring-webmvc-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-aop/5.2.7.RELEASE/spring-aop-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-context/5.2.7.RELEASE/spring-context-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-expression/5.2.7.RELEASE/spring-expression-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.3.1.RELEASE/spring-boot-starter-data-jpa-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.3.1.RELEASE/spring-boot-starter-aop-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar:
/home/ericm/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.3.1.RELEASE/spring-boot-starter-jdbc-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5.jar:
/home/ericm/.m2/repository/org/springframework/spring-jdbc/5.2.7.RELEASE/spring-jdbc-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:
/home/ericm/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:
/home/ericm/.m2/repository/org/hibernate/hibernate-core/5.4.17.Final/hibernate-core-5.4.17.Final.jar:
/home/ericm/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar:
/home/ericm/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:
/home/ericm/.m2/repository/net/bytebuddy/byte-buddy/1.10.11/byte-buddy-1.10.11.jar:
/home/ericm/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:
/home/ericm/.m2/repository/org/jboss/jandex/2.1.3.Final/jandex-2.1.3.Final.jar:
/home/ericm/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:
/home/ericm/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:
/home/ericm/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:
/home/ericm/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.3/jaxb-runtime-2.3.3.jar:
/home/ericm/.m2/repository/org/glassfish/jaxb/txw2/2.3.3/txw2-2.3.3.jar:
/home/ericm/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.11/istack-commons-runtime-3.0.11.jar:
/home/ericm/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:
/home/ericm/.m2/repository/org/springframework/data/spring-data-jpa/2.3.1.RELEASE/spring-data-jpa-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/data/spring-data-commons/2.3.1.RELEASE/spring-data-commons-2.3.1.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-orm/5.2.7.RELEASE/spring-orm-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-tx/5.2.7.RELEASE/spring-tx-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:
/home/ericm/.m2/repository/org/springframework/spring-aspects/5.2.7.RELEASE/spring-aspects-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/postgresql/postgresql/42.2.14/postgresql-42.2.14.jar:
/home/ericm/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:
/home/ericm/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:
/home/ericm/.m2/repository/org/springframework/spring-core/5.2.7.RELEASE/spring-core-5.2.7.RELEASE.jar:
/home/ericm/.m2/repository/org/springframework/spring-jcl/5.2.7.RELEASE/spring-jcl-5.2.7.RELEASE.jar
info.shelfunit.conferencedemo.ConferenceDemoApplication

